/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */

package antrian;

//import custom.*;
//import bpjsvclaim.BPJSApi;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import fungsi.akses;
import simrskhanza.*;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import inventory.DlgCariKonversi;
import inventory.DlgCariObat;
import inventory.DlgCariObat2;
import inventory.DlgCariObat3;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Properties;
import javax.swing.Timer;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

/**
 *
 * @author perpustakaan
 */
public class DlgCallerAntrianAdmision extends javax.swing.JDialog {
  private sekuel Sequel=new sekuel();
  private validasi Valid=new validasi();
  private Connection koneksi=koneksiDB.condb();
  public static int LoketClient;
  private int i=0;
  private String link="",URL="",requestJson="";
  private HttpHeaders headers;
  private HttpEntity requestEntity;
  private ObjectMapper mapper = new ObjectMapper();
  private JsonNode root;
  private JsonNode nameNode,code;
  private JsonNode response;
  private AntrianApi apiAntrian=new AntrianApi();
  private static final Properties prop = new Properties();
  private static final Properties LoketId = new Properties(); 
   private PreparedStatement ps;
    private ResultSet rs;

    /** Creates new form DlgPemberianObat
     * @param parent
     * @param modal */
    public DlgCallerAntrianAdmision(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(8,1);
        setSize(885,335);
//        try {
//            LoketId.loadFromXML(new FileInputStream("setting/loketid.xml"));
//        } catch (Exception e) {
//            System.out.println("Notif Setting : "+e);
//        }
//        LoketClient = Integer.parseInt(LoketId.getProperty("LOKETID"));
//        CmbLoket.setSelectedIndex(LoketClient-1);
        
    }

    //private DlgCariObatPenyakit dlgobtpny=new DlgCariObatPenyakit(null,false);
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        FormInput = new widget.PanelBiasa();
        FormInput1 = new widget.PanelBiasa();
        jNoRef = new widget.Label();
        jNoAntrian = new widget.Label();
        BtnKeluar3 = new widget.Button();
        FormInput2 = new widget.PanelBiasa();
        jSisa = new widget.Label();
        jLabel13 = new widget.Label();
        BtnCall = new widget.Button();
        jLabel14 = new widget.Label();
        nmPoli = new widget.TextBox();
        kdPoli = new widget.TextBox();
        nmDokter = new widget.TextBox();
        kdDokter = new widget.TextBox();
        jLabel15 = new widget.Label();
        tglAntri = new widget.TextBox();
        jamMulai = new widget.TextBox();
        jamSelesai = new widget.TextBox();
        BtnCari = new widget.Button();
        panelGlass8 = new widget.panelisi();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "::[ Caller Antrian Admision ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(70, 70, 70))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setPreferredSize(new java.awt.Dimension(875, 200));
        internalFrame1.setWarnaAtas(new java.awt.Color(160, 255, 255));
        internalFrame1.setWarnaBawah(new java.awt.Color(210, 255, 255));
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        FormInput.setName("FormInput"); // NOI18N
        FormInput.setPreferredSize(new java.awt.Dimension(865, 137));
        FormInput.setLayout(null);

        FormInput1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "No. Antrian Aktif", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 14))); // NOI18N
        FormInput1.setName("FormInput1"); // NOI18N
        FormInput1.setPreferredSize(new java.awt.Dimension(865, 137));
        FormInput1.setWarnaAtas(new java.awt.Color(102, 255, 102));
        FormInput1.setLayout(null);

        jNoRef.setName("jNoRef"); // NOI18N
        FormInput1.add(jNoRef);
        jNoRef.setBounds(230, 120, 160, 23);

        jNoAntrian.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jNoAntrian.setText("-");
        jNoAntrian.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        jNoAntrian.setName("jNoAntrian"); // NOI18N
        FormInput1.add(jNoAntrian);
        jNoAntrian.setBounds(15, 20, 370, 110);

        FormInput.add(FormInput1);
        FormInput1.setBounds(10, 10, 400, 150);

        BtnKeluar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/42a.png"))); // NOI18N
        BtnKeluar3.setMnemonic('T');
        BtnKeluar3.setText(" Re-Called ");
        BtnKeluar3.setToolTipText("Alt+T");
        BtnKeluar3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BtnKeluar3.setGlassColor(new java.awt.Color(255, 204, 0));
        BtnKeluar3.setName("BtnKeluar3"); // NOI18N
        BtnKeluar3.setPreferredSize(new java.awt.Dimension(200, 30));
        BtnKeluar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluar3ActionPerformed(evt);
            }
        });
        BtnKeluar3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluar3KeyPressed(evt);
            }
        });
        FormInput.add(BtnKeluar3);
        BtnKeluar3.setBounds(630, 170, 180, 50);

        FormInput2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sisa Antrian", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 14))); // NOI18N
        FormInput2.setName("FormInput2"); // NOI18N
        FormInput2.setPreferredSize(new java.awt.Dimension(865, 137));
        FormInput2.setWarnaAtas(new java.awt.Color(255, 204, 102));
        FormInput2.setLayout(null);

        jSisa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jSisa.setText("-");
        jSisa.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        jSisa.setName("jSisa"); // NOI18N
        FormInput2.add(jSisa);
        jSisa.setBounds(15, 20, 370, 110);

        FormInput.add(FormInput2);
        FormInput2.setBounds(430, 10, 390, 150);

        jLabel13.setText("Dokter :");
        jLabel13.setName("jLabel13"); // NOI18N
        FormInput.add(jLabel13);
        jLabel13.setBounds(0, 190, 70, 23);

        BtnCall.setBackground(new java.awt.Color(0, 204, 153));
        BtnCall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/History.png"))); // NOI18N
        BtnCall.setMnemonic('T');
        BtnCall.setText(" Called");
        BtnCall.setToolTipText("Alt+T");
        BtnCall.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BtnCall.setGlassColor(new java.awt.Color(0, 255, 0));
        BtnCall.setName("BtnCall"); // NOI18N
        BtnCall.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCallActionPerformed(evt);
            }
        });
        BtnCall.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCallKeyPressed(evt);
            }
        });
        FormInput.add(BtnCall);
        BtnCall.setBounds(450, 170, 170, 50);

        jLabel14.setText("Poli :");
        jLabel14.setName("jLabel14"); // NOI18N
        FormInput.add(jLabel14);
        jLabel14.setBounds(0, 165, 70, 23);

        nmPoli.setEditable(false);
        nmPoli.setHighlighter(null);
        nmPoli.setName("nmPoli"); // NOI18N
        nmPoli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nmPoliKeyPressed(evt);
            }
        });
        FormInput.add(nmPoli);
        nmPoli.setBounds(170, 165, 240, 23);

        kdPoli.setEditable(false);
        kdPoli.setHighlighter(null);
        kdPoli.setName("kdPoli"); // NOI18N
        kdPoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kdPoliActionPerformed(evt);
            }
        });
        kdPoli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kdPoliKeyPressed(evt);
            }
        });
        FormInput.add(kdPoli);
        kdPoli.setBounds(80, 165, 90, 23);

        nmDokter.setEditable(false);
        nmDokter.setHighlighter(null);
        nmDokter.setName("nmDokter"); // NOI18N
        nmDokter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nmDokterKeyPressed(evt);
            }
        });
        FormInput.add(nmDokter);
        nmDokter.setBounds(170, 190, 240, 23);

        kdDokter.setEditable(false);
        kdDokter.setHighlighter(null);
        kdDokter.setName("kdDokter"); // NOI18N
        kdDokter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kdDokterKeyPressed(evt);
            }
        });
        FormInput.add(kdDokter);
        kdDokter.setBounds(80, 190, 90, 23);

        jLabel15.setText("Jam Praktek :");
        jLabel15.setName("jLabel15"); // NOI18N
        FormInput.add(jLabel15);
        jLabel15.setBounds(0, 215, 70, 23);

        tglAntri.setEditable(false);
        tglAntri.setHighlighter(null);
        tglAntri.setName("tglAntri"); // NOI18N
        tglAntri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tglAntriKeyPressed(evt);
            }
        });
        FormInput.add(tglAntri);
        tglAntri.setBounds(80, 215, 90, 23);

        jamMulai.setEditable(false);
        jamMulai.setHighlighter(null);
        jamMulai.setName("jamMulai"); // NOI18N
        jamMulai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jamMulaiKeyPressed(evt);
            }
        });
        FormInput.add(jamMulai);
        jamMulai.setBounds(180, 215, 110, 23);

        jamSelesai.setEditable(false);
        jamSelesai.setHighlighter(null);
        jamSelesai.setName("jamSelesai"); // NOI18N
        jamSelesai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jamSelesaiKeyPressed(evt);
            }
        });
        FormInput.add(jamSelesai);
        jamSelesai.setBounds(290, 215, 120, 23);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('6');
        BtnCari.setToolTipText("Alt+6");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        FormInput.add(BtnCari);
        BtnCari.setBounds(410, 215, 28, 23);

        internalFrame1.add(FormInput, java.awt.BorderLayout.CENTER);
        FormInput.getAccessibleContext().setAccessibleName("");
        FormInput.getAccessibleContext().setAccessibleDescription("");

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(100, 56));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnKeluar.setMnemonic('T');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+T");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        internalFrame1.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void berhasilSimpan() {  
   
} 
    
    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      
    }//GEN-LAST:event_formWindowActivated

    private void BtnKeluar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluar3ActionPerformed

        recall();
    }//GEN-LAST:event_BtnKeluar3ActionPerformed

    private void BtnKeluar3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluar3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnKeluar3KeyPressed

    private void BtnCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCallActionPerformed
    call();
    }//GEN-LAST:event_BtnCallActionPerformed

    private void BtnCallKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCallKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCallKeyPressed

    private void nmPoliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nmPoliKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_UP){
//            BtnCariPegawaiActionPerformed(null);
        }else{
//            Valid.pindah(evt,TCari,TNm);
        }
    }//GEN-LAST:event_nmPoliKeyPressed

    private void kdPoliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kdPoliKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_kdPoliKeyPressed

    private void nmDokterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nmDokterKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmDokterKeyPressed

    private void kdDokterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kdDokterKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_kdDokterKeyPressed

    private void tglAntriKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tglAntriKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tglAntriKeyPressed

    private void jamMulaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamMulaiKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamMulaiKeyPressed

    private void jamSelesaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamSelesaiKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamSelesaiKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      tampil();
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
//            Valid.pindah(evt,NoRujukan,BtnPrint);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void kdPoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kdPoliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kdPoliActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgCallerAntrianAdmision dialog = new DlgCallerAntrianAdmision(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnCall;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnKeluar3;
    private widget.PanelBiasa FormInput;
    private widget.PanelBiasa FormInput1;
    private widget.PanelBiasa FormInput2;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel13;
    private widget.Label jLabel14;
    private widget.Label jLabel15;
    private widget.Label jNoAntrian;
    private widget.Label jNoRef;
    private widget.Label jSisa;
    private widget.TextBox jamMulai;
    private widget.TextBox jamSelesai;
    private widget.TextBox kdDokter;
    private widget.TextBox kdPoli;
    private widget.TextBox nmDokter;
    private widget.TextBox nmPoli;
    private widget.panelisi panelGlass8;
    private widget.TextBox tglAntri;
    // End of variables declaration//GEN-END:variables
    

    private void isPsien() {
//        Sequel.cariIsi("select nm_pasien from pasien where no_rkm_medis=? ",TPasien,TNoRM.getText());
    }
    public void setDokter(String idKuota) {
         try {
            ps=koneksi.prepareStatement(
                   "Select kuota_registrasilayanan.kd_dokter,dokter.nm_dokter,mapping_dokterantrian.kd_dokter_antrian,kuota_registrasilayanan.tanggal,kuota_registrasilayanan.jambuka,kuota_registrasilayanan.jamtutup,poliklinik.nm_poli from kuota_registrasilayanan JOIN mapping_dokterantrian ON kuota_registrasilayanan.kd_dokter=mapping_dokterantrian.kd_dokter JOIN dokter ON kuota_registrasilayanan.kd_dokter=dokter.kd_dokter JOIN poliklinik ON kuota_registrasilayanan.kd_poli=poliklinik.kd_poli "+
                   "where idkuota=? ");
            try{
                ps.setString(1,idKuota);
                
                rs=ps.executeQuery();
                while(rs.next()){
                      kdPoli.setText(rs.getString("kd_dokter_antrian"));
                      nmPoli.setText(rs.getString("nm_poli"));
                      kdDokter.setText(rs.getString("kd_dokter"));
                      nmDokter.setText(rs.getString("nm_dokter"));
                      tglAntri.setText(rs.getString("tanggal"));
                      jamMulai.setText(rs.getString("jambuka"));
                      jamSelesai.setText(rs.getString("jamtutup"));
                    
                }
            }catch(Exception e){
                System.out.println("Notifikasi : "+e);
            }finally{
                if(rs != null){
                    rs.close();
                }
                
                if(ps != null){
                    ps.close();
                }
            }
        } catch (Exception e) {
            System.out.println("Notifikasi : "+e);
        }
        
      
        
    }
    public void tampil() {
        aktif();
        sisa();
    }
    public void aktif() {
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
            link=apiAntrian.URLANTRIAN();
            URL = link+"active_antrian";
           // System.out.println(URL);
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            requestJson =" {" +
                    
                            "\"kd_poli\": \""+kdPoli.getText()+"\"," +
                            "\"kd_dokter\": \""+kdDokter.getText()+"\"," +
                            "\"nm_dokter\": \""+nmDokter.getText()+"\"," +
                            "\"jam_mulai\": \""+jamMulai.getText()+"\"," +
                            "\"jam_selesai\": \""+jamSelesai.getText()+"\"," +
                            "\"tgl_antri\": \""+tglAntri.getText()+"\"" +
                       
                "}";
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiAntrian.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            code = root.path("code");
            response =root.path("response");
//              System.out.println(response);
//                System.out.println(response.path("policlinics").asText());
             if(code.asText().equals("200"))
             {
                 jNoAntrian.setText(response.path("activeAntrian").path("no_display").asText());
                 jNoRef.setText(response.path("activeAntrian").path("no_ref").asText());
             }else{
                  jNoAntrian.setText("-");
                   jNoRef.setText("");
                 
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void sisa() {
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
            link=apiAntrian.URLANTRIAN();
            URL = link+"sisa_antrian";
           // System.out.println(URL);
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            requestJson =" {" +
                    
                            "\"kd_poli\": \""+kdPoli.getText()+"\"," +
                            "\"kd_dokter\": \""+kdDokter.getText()+"\"," +
                            "\"nm_dokter\": \""+nmDokter.getText()+"\"," +
                            "\"jam_mulai\": \""+jamMulai.getText()+"\"," +
                            "\"jam_selesai\": \""+jamSelesai.getText()+"\"," +
                            "\"tgl_antri\": \""+tglAntri.getText()+"\"" +
                       
                "}";
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiAntrian.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            code = root.path("code");
            response =root.path("response");
//              System.out.println(response);
//                System.out.println(response.path("policlinics").asText());
             if(code.asText().equals("200"))
             {
                 jSisa.setText(response.path("sisa_antrian").asText());
                  
             }else{
                 jSisa.setText("-");
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void call() {
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
            link=apiAntrian.URLANTRIAN();
            URL = link+"call_antrian";
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            requestJson =" {" +
                    
                            "\"kd_poli\": \""+kdPoli.getText()+"\"," +
                            "\"kd_dokter\": \""+kdDokter.getText()+"\"," +
                            "\"nm_dokter\": \""+nmDokter.getText()+"\"," +
                            "\"jam_mulai\": \""+jamMulai.getText()+"\"," +
                            "\"jam_selesai\": \""+jamSelesai.getText()+"\"," +
                            "\"noref\": \""+jNoRef.getText()+"\"," +
                            "\"tgl_antri\": \""+tglAntri.getText()+"\"" +
                       
                "}";
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiAntrian.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            code = root.path("code");
            response =root.path("response");
//              System.out.println(response);
              if(code.asText().equals("200"))
             {
                 tampil();
                  
             }else{
                 JOptionPane.showMessageDialog(null,"Maaf, data Antrian sudah habis.");
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void recall() {
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
            link=apiAntrian.URLANTRIAN();
            URL = link+"recall_antrian";
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            requestJson =" {" +
                    
                            "\"no_ref\": \""+jNoRef.getText()+"\"," +
                            "\"nm_dokter\": \""+nmDokter.getText()+"\"" +
                       
                "}";
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiAntrian.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            code = root.path("code");
            response =root.path("response");
//              System.out.println(response);
              if(code.asText().equals("200"))
             {
               
                 tampil();
                 JOptionPane.showMessageDialog(null,"Antrian Berhasil di Recall.");
                  
             }else{
                 JOptionPane.showMessageDialog(null,"Maaf, data Antrian sudah habis.");
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
  
    public void tampilrecall() {
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
            link=apiAntrian.URLANTRIAN();
            URL = link+"active_antrian";
           // System.out.println(URL);
            headers= new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);
            requestJson =" {" +
                    
                            "\"kd_poli\": \""+kdPoli.getText()+"\"," +
                            "\"kd_dokter\": \""+kdDokter.getText()+"\"," +
                            "\"nm_dokter\": \""+nmDokter.getText()+"\"," +
                            "\"jam_mulai\": \""+jamMulai.getText()+"\"," +
                            "\"jam_selesai\": \""+jamSelesai.getText()+"\"," +
                            "\"tgl_antri\": \""+tglAntri.getText()+"\"" +
                       
                "}";
	    requestEntity = new HttpEntity(requestJson,headers);
	    root = mapper.readTree(apiAntrian.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
            code = root.path("code");
            response =root.path("response");
//              System.out.println(response);
//                System.out.println(response.path("policlinics").asText());
             if(code.asText().equals("200"))
             {
                // jNoAntrian.setVisible(false);
//                  Thread.sleep(3000);
                   for (i = 0; i < 6; i++) {
                    if (i % 2 == 0) {
                        jNoAntrian.setForeground(Color.red);
                    } else {
                        jNoAntrian.setForeground(Color.BLUE);
                    }
                    Thread.sleep(500);
                }
                  // jNoAntrian.setVisible(true);
                 
//                 final String[] lines;
//            for(int i=0; i<10; i++){
//                Timer t = new Timer(1000*i,new ActionListener(){
//                    //int ind=i;
//                    public void actionPerformed(ActionEvent e){
//                        jNoAntrian.setText(jNoAntrian.getText() + "\n ."); 
//                    }
//                });
//                t.start();
//            }
//                 int timeToWait = 10; //second
//                    System.out.println("Scanning");
//                    try {
//                        for (int i=0; i<timeToWait ; i++) {
////                            jNoAntrian.setText(response.path("activeAntrian").path("no_display").asText());
//                             Thread.sleep(1000);
//                            
//                            if(i % 2 == 1)
//                            {
//                                
//                                System.out.println("."+i);
//                                  jNoAntrian.setVisible(false);
//                            }else{
//                                
//                                jNoAntrian.setVisible(true);
//                               
//                            }
////                             Thread.sleep(1000);
////                            if(i%2==0){
////                                jNoAntrian.setText(response.path("activeAntrian").path("no_display").asText());
////                            }else{
////                                jNoAntrian.setText("");
////                            }
//                          // System.out.println("."+i);
//                        }
//                    } catch (InterruptedException ie)
//                    {
//                        
//                        Thread.currentThread().interrupt();
//                    }
                 
                // jNoRef.setText(response.path("activeAntrian").path("no_ref").asText());
             }else{
                  jNoAntrian.setText("-");
                   jNoRef.setText("");
                 
             }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}
