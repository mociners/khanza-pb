package rekammedis;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JPanel;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import static rekammedis.GrafikBalanceCairan.createDatasetBc;
import static rekammedis.GrafikBalanceCairan.createPanelBc;

public class GrafikBalanceCairanRanap extends javax.swing.JDialog {
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private Connection koneksi=koneksiDB.condb();
    private PreparedStatement ps,ps2;
    private ResultSet rs,rs2;
    private int i=0;
    private String noRawat="";
    
    
    /** Creates new form DlgProgramStudi
     * @param parent
     * @param modal */
    public GrafikBalanceCairanRanap(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         setSize(1285,674);
        
        HTMLEditorKit kit = new HTMLEditorKit();
//        LoadHTML.setEditable(true);
//        LoadHTML.setEditorKit(kit);
//        LoadHTML.setEditable(true);
//        LoadHTML.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();
        
        styleSheet.addRule(
                ".isi td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-bottom: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi2 td{font: 8.5px tahoma;height:12px;background: #ffffff;color:#323232;}"+
                ".isi3 td{border-right: 1px solid #e2e7dd;font: 8.5px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"+
                ".isi4 td{font: 11px tahoma;height:12px;border-top: 1px solid #e2e7dd;background: #ffffff;color:#323232;}"
        );
        Document doc = kit.createDefaultDocument();
//        LoadHTML.setDocument(doc);
//        LoadHTML.setDocument(doc);
    ChkInput.setSelected(false);
    }
    private Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Kd2 = new widget.TextBox();
        internalFrame1 = new widget.InternalFrame();
        PanelInput = new javax.swing.JPanel();
        TabRawat = new javax.swing.JTabbedPane();
        internalFrame9 = new widget.InternalFrame();
        Tensi1 = new widget.ScrollPane();
        jPanelSkalaNyeri = new javax.swing.JPanel();
        ChkInput = new widget.CekBox();
        panelisi1 = new widget.panelisi();
        label9 = new widget.Label();
        BtnKeluar = new widget.Button();

        Kd2.setName("Kd2"); // NOI18N
        Kd2.setPreferredSize(new java.awt.Dimension(207, 23));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Grafik Balance Cairan ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        PanelInput.setName("PanelInput"); // NOI18N
        PanelInput.setOpaque(false);
        PanelInput.setPreferredSize(new java.awt.Dimension(192, 330));
        PanelInput.setLayout(new java.awt.BorderLayout(1, 1));

        TabRawat.setBackground(new java.awt.Color(254, 255, 254));
        TabRawat.setForeground(new java.awt.Color(50, 50, 50));
        TabRawat.setName("TabRawat"); // NOI18N

        internalFrame9.setBorder(null);
        internalFrame9.setName("internalFrame9"); // NOI18N
        internalFrame9.setLayout(new java.awt.BorderLayout(1, 1));

        Tensi1.setName("Tensi1"); // NOI18N
        Tensi1.setOpaque(true);

        jPanelSkalaNyeri.setName("jPanelSkalaNyeri"); // NOI18N
        Tensi1.setViewportView(jPanelSkalaNyeri);

        internalFrame9.add(Tensi1, java.awt.BorderLayout.CENTER);

        TabRawat.addTab("Balance Cairan", internalFrame9);

        PanelInput.add(TabRawat, java.awt.BorderLayout.CENTER);

        ChkInput.setMnemonic('I');
        ChkInput.setToolTipText("Alt+I");
        ChkInput.setBorderPainted(true);
        ChkInput.setBorderPaintedFlat(true);
        ChkInput.setEnabled(false);
        ChkInput.setFocusable(false);
        ChkInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ChkInput.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ChkInput.setName("ChkInput"); // NOI18N
        ChkInput.setPreferredSize(new java.awt.Dimension(193, 20));
        ChkInput.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/143.png"))); // NOI18N
        ChkInput.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/145.png"))); // NOI18N
        ChkInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkInputActionPerformed(evt);
            }
        });
        PanelInput.add(ChkInput, java.awt.BorderLayout.PAGE_END);

        internalFrame1.add(PanelInput, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setPreferredSize(new java.awt.Dimension(100, 56));
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        label9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(20, 30));
        panelisi1.add(label9);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        internalFrame1.add(panelisi1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
private void KdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
    Valid.pindah(evt,BtnCari,Nm);
}//GEN-LAST:event_TKdKeyPressed
*/

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //prosesCari();
    }//GEN-LAST:event_formWindowOpened

    private void ChkInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkInputActionPerformed
        isForm();
    }//GEN-LAST:event_ChkInputActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }else{Valid.pindah(evt,BtnKeluar,BtnKeluar);}
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            GrafikBalanceCairanRanap dialog = new GrafikBalanceCairanRanap(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnKeluar;
    private widget.CekBox ChkInput;
    private widget.TextBox Kd2;
    private javax.swing.JPanel PanelInput;
    private javax.swing.JTabbedPane TabRawat;
    private widget.ScrollPane Tensi1;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame9;
    private javax.swing.JPanel jPanelSkalaNyeri;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    // End of variables declaration//GEN-END:variables

    
    
    public void isCek(){

    }
    
    public void setNoRawat(String x,String y)
    {
        this.noRawat=x;

        ChkInput.setSelected(false);
        isForm();

        JPanel chartPanelBc = createPanelBc(x);
        jPanelSkalaNyeri.add(chartPanelBc);


    }

    public void tampil() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    

    public static JPanel createPanelBc(String noRawat) {
             JFreeChart chart = createChartBc(noRawat);
             return new ChartPanel(chart);
         }

    
    private static JFreeChart createChartBc(String noRawat) {

             CategoryDataset datasetBc = createDatasetBc(noRawat);
             NumberAxis rangeAxis1 = new NumberAxis("cc");
             rangeAxis1.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
              rangeAxis1.setAutoRangeIncludesZero(true);
             LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
             renderer1.setBaseToolTipGenerator(
                     new StandardCategoryToolTipGenerator());
            
             CategoryPlot subplot1 = new CategoryPlot(datasetBc, null, rangeAxis1,
                     renderer1);
             subplot1.setDomainGridlinesVisible(true);
             
             CategoryAxis domainAxis = new CategoryAxis("");
             
             CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
             plot.add(subplot1,2 );
             CategoryAxis domainAxis2 = plot.getDomainAxis();
             domainAxis2.setCategoryLabelPositions(CategoryLabelPositions.DOWN_90);
             JFreeChart result = new JFreeChart(
                     "",
                     new Font("SansSerif", Font.PLAIN,6 ), plot, true);
             return result;

         }

        public static CategoryDataset createDatasetBc(String noRawat) { //data grafik nilai K dan D

        DefaultCategoryDataset result = new DefaultCategoryDataset();
        String series3 = "Grafik Balance Cairan";
            try {
                Statement stat = koneksiDB.condb().createStatement();
                ResultSet rs = stat.executeQuery("select concat(tanggal,' ',jam) as period,bc "+
                   "from ews_balance_cairan where no_rawat='"+noRawat+"'  ");
                while (rs.next()) {
                    String tksbr=rs.getString("period");
                    double bc=rs.getDouble("bc");
                    result.addValue(bc, series3,tksbr);
                }
                ResultSet rs2 = stat.executeQuery("select concat(tanggal,' ',jam) as period,bc "+
                   "from ews_balance_cairan where no_rawat='"+noRawat+"'  ");
                while (rs2.next()) {
                    String tksbr=rs2.getString("period");
                    double bc=rs2.getDouble("bc");
                    result.addValue(bc, series3,tksbr);
                }
            } catch (SQLException e) {
                System.out.println("Notifikasi Q: " + e);
            }
            return result;
       }
     

      private void isForm(){
        if(ChkInput.isSelected()==true){
            ChkInput.setVisible(false);
            PanelInput.setPreferredSize(new Dimension(WIDTH,645)); 
            
            ChkInput.setVisible(true);
        }else if(ChkInput.isSelected()==false){           
            ChkInput.setVisible(false);            
            PanelInput.setPreferredSize(new Dimension(WIDTH,645)); 
            
            ChkInput.setVisible(true);
        }
    }
}
