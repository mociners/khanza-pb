/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DlgBangsal.java
 *
 * Created on May 22, 2010, 9:58:42 PM
 */

package kepegawaian;
import fungsi.WarnaTable;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author dosen
 */
public final class DlgImportJadwalTambahanPegawai extends javax.swing.JDialog {
    private DefaultTableModel tabMode;
    private validasi Valid=new validasi();
    private final Connection koneksi=koneksiDB.condb();
    private final sekuel Sequel=new sekuel();
    private String bulan,tahun,dateString,dayOfWeek,hari;
    private Date date = null;
    private DlgJamMasuk jammasuk=new DlgJamMasuk(null,false);
    
    /** Creates new form DlgBangsal
     * @param parent
     * @param modal */
    public DlgImportJadwalTambahanPegawai(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        tbJadwal.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbJadwal.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jammasuk.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {}
            @Override
            public void windowClosed(WindowEvent e) {
                if(jammasuk.getTable().getSelectedRow()!= -1){    
                    if(tbJadwal.getSelectedColumn()>4){
                        tabMode.setValueAt(jammasuk.getTable().getValueAt(jammasuk.getTable().getSelectedRow(),1).toString(),tbJadwal.getSelectedRow(),tbJadwal.getSelectedColumn());
                    }
                }   
                tbJadwal.requestFocus();
            }
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
        
        jammasuk.getTable().addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {}
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode()==KeyEvent.VK_SPACE){
                    jammasuk.dispose();
                }   
            }
            @Override
            public void keyReleased(KeyEvent e) {}
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    internalFrame1 = new widget.InternalFrame();
    Scroll = new widget.ScrollPane();
    tbJadwal = new widget.Table();
    jPanel1 = new javax.swing.JPanel();
    panelGlass5 = new widget.panelisi();
    jLabel7 = new widget.Label();
    LCount = new widget.Label();
    BtnFile = new widget.Button();
    BtnSimpan = new widget.Button();
    BtnKeluar = new widget.Button();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setIconImage(null);
    setIconImages(null);
    setUndecorated(true);
    setResizable(false);
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowOpened(java.awt.event.WindowEvent evt) {
        formWindowOpened(evt);
      }
    });

    internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Import Jadwal Kehadiran Pegawai ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
    internalFrame1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    internalFrame1.setName("internalFrame1"); // NOI18N
    internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

    Scroll.setName("Scroll"); // NOI18N
    Scroll.setOpaque(true);

    tbJadwal.setAutoCreateRowSorter(true);
    tbJadwal.setName("tbJadwal"); // NOI18N
    tbJadwal.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tbJadwalMouseClicked(evt);
      }
    });
    tbJadwal.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        tbJadwalKeyReleased(evt);
      }
    });
    Scroll.setViewportView(tbJadwal);

    internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

    jPanel1.setName("jPanel1"); // NOI18N
    jPanel1.setOpaque(false);
    jPanel1.setLayout(new java.awt.BorderLayout(1, 1));

    panelGlass5.setName("panelGlass5"); // NOI18N
    panelGlass5.setPreferredSize(new java.awt.Dimension(55, 55));
    panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

    jLabel7.setText("Record :");
    jLabel7.setName("jLabel7"); // NOI18N
    jLabel7.setPreferredSize(new java.awt.Dimension(57, 23));
    panelGlass5.add(jLabel7);

    LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    LCount.setText("0");
    LCount.setName("LCount"); // NOI18N
    LCount.setPreferredSize(new java.awt.Dimension(68, 23));
    panelGlass5.add(LCount);

    BtnFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/add-file-16x16.png"))); // NOI18N
    BtnFile.setMnemonic('T');
    BtnFile.setText("Ambil File");
    BtnFile.setToolTipText("Alt+T");
    BtnFile.setName("BtnFile"); // NOI18N
    BtnFile.setPreferredSize(new java.awt.Dimension(100, 30));
    BtnFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        BtnFileActionPerformed(evt);
      }
    });
    BtnFile.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        BtnFileKeyPressed(evt);
      }
    });
    panelGlass5.add(BtnFile);

    BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
    BtnSimpan.setMnemonic('T');
    BtnSimpan.setText("Simpan");
    BtnSimpan.setToolTipText("Alt+T");
    BtnSimpan.setName("BtnSimpan"); // NOI18N
    BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
    BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        BtnSimpanActionPerformed(evt);
      }
    });
    panelGlass5.add(BtnSimpan);

    BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
    BtnKeluar.setMnemonic('K');
    BtnKeluar.setText("Keluar");
    BtnKeluar.setToolTipText("Alt+K");
    BtnKeluar.setName("BtnKeluar"); // NOI18N
    BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
    BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        BtnKeluarActionPerformed(evt);
      }
    });
    BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        BtnKeluarKeyPressed(evt);
      }
    });
    panelGlass5.add(BtnKeluar);

    jPanel1.add(panelGlass5, java.awt.BorderLayout.CENTER);

    internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_END);

    getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            dispose();
        }
//        else{Valid.pindah(evt,BtnAll,TCari);}
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void BtnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel file", "xls"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            importExcel(selectedFile);
        }
    }//GEN-LAST:event_BtnFileActionPerformed

    private void BtnFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnFileKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnFileActionPerformed(null);
        }else{
            Valid.pindah(evt,BtnFile,BtnSimpan);
        }
    }//GEN-LAST:event_BtnFileKeyPressed

  private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
    for (int i = 0; i < tabMode.getRowCount(); i++) { 
      try {
        Sequel.menyimpan2("jadwal_tambahan", "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?", 34,
          new String[]{
            tabMode.getValueAt(i, 1) != null ? tabMode.getValueAt(i, 1).toString() : "",
            tahun,
            bulan,
            tabMode.getValueAt(i, 3) != null ? tabMode.getValueAt(i, 3).toString() : "",
            tabMode.getValueAt(i, 4) != null ? tabMode.getValueAt(i, 4).toString() : "",
            tabMode.getValueAt(i, 5) != null ? tabMode.getValueAt(i, 5).toString() : "",
            tabMode.getValueAt(i, 6) != null ? tabMode.getValueAt(i, 6).toString() : "",
            tabMode.getValueAt(i, 7) != null ? tabMode.getValueAt(i, 7).toString() : "",
            tabMode.getValueAt(i, 8) != null ? tabMode.getValueAt(i, 8).toString() : "",
            tabMode.getValueAt(i, 9) != null ? tabMode.getValueAt(i, 9).toString() : "",
            tabMode.getValueAt(i, 10) != null ? tabMode.getValueAt(i, 10).toString() : "",
            tabMode.getValueAt(i, 11) != null ? tabMode.getValueAt(i, 11).toString() : "",
            tabMode.getValueAt(i, 12) != null ? tabMode.getValueAt(i, 12).toString() : "",
            tabMode.getValueAt(i, 13) != null ? tabMode.getValueAt(i, 13).toString() : "",
            tabMode.getValueAt(i, 14) != null ? tabMode.getValueAt(i, 14).toString() : "",
            tabMode.getValueAt(i, 15) != null ? tabMode.getValueAt(i, 15).toString() : "",
            tabMode.getValueAt(i, 16) != null ? tabMode.getValueAt(i, 16).toString() : "",
            tabMode.getValueAt(i, 17) != null ? tabMode.getValueAt(i, 17).toString() : "",
            tabMode.getValueAt(i, 18) != null ? tabMode.getValueAt(i, 18).toString() : "",
            tabMode.getValueAt(i, 19) != null ? tabMode.getValueAt(i, 19).toString() : "",
            tabMode.getValueAt(i, 20) != null ? tabMode.getValueAt(i, 20).toString() : "",
            tabMode.getValueAt(i, 21) != null ? tabMode.getValueAt(i, 21).toString() : "",
            tabMode.getValueAt(i, 22) != null ? tabMode.getValueAt(i, 22).toString() : "",
            tabMode.getValueAt(i, 23) != null ? tabMode.getValueAt(i, 23).toString() : "",
            tabMode.getValueAt(i, 24) != null ? tabMode.getValueAt(i, 24).toString() : "",
            tabMode.getValueAt(i, 25) != null ? tabMode.getValueAt(i, 25).toString() : "",
            tabMode.getValueAt(i, 26) != null ? tabMode.getValueAt(i, 26).toString() : "",
            tabMode.getValueAt(i, 27) != null ? tabMode.getValueAt(i, 27).toString() : "",
            tabMode.getValueAt(i, 28) != null ? tabMode.getValueAt(i, 28).toString() : "",
            tabMode.getValueAt(i, 29) != null ? tabMode.getValueAt(i, 29).toString() : "",
            tabMode.getValueAt(i, 30) != null ? tabMode.getValueAt(i, 30).toString() : "",
            tabMode.getValueAt(i, 31) != null ? tabMode.getValueAt(i, 31).toString() : "",
            tabMode.getValueAt(i, 32) != null ? tabMode.getValueAt(i, 32).toString() : "",
            tabMode.getValueAt(i, 33) != null ? tabMode.getValueAt(i, 33).toString() : ""
          },
          "id=? and tahun=? and bulan=?", "h1=?,h2=?,h3=?,h4=?,h5=?,h6=?,h7=?,h8=?,h9=?,h10=?,h11=?,h12=?,h13=?,h14=?,"
          + "h15=?,h16=?,h17=?,h18=?,h19=?,h20=?,h21=?,h22=?,h23=?,h24=?,h25=?,h26=?,h27=?,h28=?,h29=?,h30=?,h31=?", 34,
          new String[]{
            tabMode.getValueAt(i, 3) != null ? tabMode.getValueAt(i, 3).toString() : "",
            tabMode.getValueAt(i, 4) != null ? tabMode.getValueAt(i, 4).toString() : "",
            tabMode.getValueAt(i, 5) != null ? tabMode.getValueAt(i, 5).toString() : "",
            tabMode.getValueAt(i, 6) != null ? tabMode.getValueAt(i, 6).toString() : "",
            tabMode.getValueAt(i, 7) != null ? tabMode.getValueAt(i, 7).toString() : "",
            tabMode.getValueAt(i, 8) != null ? tabMode.getValueAt(i, 8).toString() : "",
            tabMode.getValueAt(i, 9) != null ? tabMode.getValueAt(i, 9).toString() : "",
            tabMode.getValueAt(i, 10) != null ? tabMode.getValueAt(i, 10).toString() : "",
            tabMode.getValueAt(i, 11) != null ? tabMode.getValueAt(i, 11).toString() : "",
            tabMode.getValueAt(i, 12) != null ? tabMode.getValueAt(i, 12).toString() : "",
            tabMode.getValueAt(i, 13) != null ? tabMode.getValueAt(i, 13).toString() : "",
            tabMode.getValueAt(i, 14) != null ? tabMode.getValueAt(i, 14).toString() : "",
            tabMode.getValueAt(i, 15) != null ? tabMode.getValueAt(i, 15).toString() : "",
            tabMode.getValueAt(i, 16) != null ? tabMode.getValueAt(i, 16).toString() : "",
            tabMode.getValueAt(i, 17) != null ? tabMode.getValueAt(i, 17).toString() : "",
            tabMode.getValueAt(i, 18) != null ? tabMode.getValueAt(i, 18).toString() : "",
            tabMode.getValueAt(i, 19) != null ? tabMode.getValueAt(i, 19).toString() : "",
            tabMode.getValueAt(i, 20) != null ? tabMode.getValueAt(i, 20).toString() : "",
            tabMode.getValueAt(i, 21) != null ? tabMode.getValueAt(i, 21).toString() : "",
            tabMode.getValueAt(i, 22) != null ? tabMode.getValueAt(i, 22).toString() : "",
            tabMode.getValueAt(i, 23) != null ? tabMode.getValueAt(i, 23).toString() : "",
            tabMode.getValueAt(i, 24) != null ? tabMode.getValueAt(i, 24).toString() : "",
            tabMode.getValueAt(i, 25) != null ? tabMode.getValueAt(i, 25).toString() : "",
            tabMode.getValueAt(i, 26) != null ? tabMode.getValueAt(i, 26).toString() : "",
            tabMode.getValueAt(i, 27) != null ? tabMode.getValueAt(i, 27).toString() : "",
            tabMode.getValueAt(i, 28) != null ? tabMode.getValueAt(i, 28).toString() : "",
            tabMode.getValueAt(i, 29) != null ? tabMode.getValueAt(i, 29).toString() : "",
            tabMode.getValueAt(i, 30) != null ? tabMode.getValueAt(i, 30).toString() : "",
            tabMode.getValueAt(i, 31) != null ? tabMode.getValueAt(i, 31).toString() : "",
            tabMode.getValueAt(i, 32) != null ? tabMode.getValueAt(i, 32).toString() : "",
            tabMode.getValueAt(i, 33) != null ? tabMode.getValueAt(i, 33).toString() : "",
            tabMode.getValueAt(i, 1) != null ? tabMode.getValueAt(i, 1).toString() : "",
            tahun,
            bulan
          }
        );
        if(i == tabMode.getRowCount() - 1){
          JOptionPane.showMessageDialog(null, "Jadwal berhasil tersimpan!");
          tabMode.setRowCount(0);
        }
      } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error saving row " + i + ": " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
      }
    }
  }//GEN-LAST:event_BtnSimpanActionPerformed

  private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    tampil();
  }//GEN-LAST:event_formWindowOpened

  private void tbJadwalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbJadwalKeyReleased
    if(evt.getKeyCode()==KeyEvent.VK_DELETE){
      tabMode.setValueAt("",tbJadwal.getSelectedRow(),tbJadwal.getSelectedColumn());
    }
  }//GEN-LAST:event_tbJadwalKeyReleased

  private void tbJadwalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbJadwalMouseClicked
    if(tabMode.getRowCount()!=0){
      if(evt.getClickCount()==2){
        jammasuk.isCek();
        jammasuk.setSize(internalFrame1.getWidth()-20,internalFrame1.getHeight());
        jammasuk.setLocationRelativeTo(internalFrame1);
        jammasuk.setVisible(true);
      }
    }
  }//GEN-LAST:event_tbJadwalMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgImportJadwalTambahanPegawai dialog = new DlgImportJadwalTambahanPegawai(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    
    public void setBulanTahun(String bln,String thn){
      bulan = bln;
      tahun = thn;
    }
    
    private void importExcel(File file) {
        try {
          Workbook workbook = Workbook.getWorkbook(file);
          Sheet sheet = workbook.getSheet(0);
          for(int row = 1; row < sheet.getRows();row++){
            Object[] rowData = new Object[34];
            for(int col = 0; col < 34; col++){
              Cell cell = sheet.getCell(col, row);
              rowData[col]=cell.getContents();
            }
            tabMode.addRow(rowData);
          }
          LCount.setText(""+tabMode.getRowCount());
        }catch(IOException | BiffException e){
          e.printStackTrace();
          JOptionPane.showMessageDialog(this, "Error: "+ e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    String konversi(int year, int month, int day){
        dateString = String.format("%d-%d-%d", year, month, day);        
        try {
            date = new SimpleDateFormat("yyyy-M-d").parse(dateString);
        } catch (Exception ex) {
            Logger.getLogger(DlgJadwalPegawai.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Then get the day of week from the Date based on specific locale.
        dayOfWeek = new SimpleDateFormat("EEEE", Locale.ENGLISH).format(date);

        switch (dayOfWeek) {
            case "Monday":
                hari="Senin";
                break;
            case "Tuesday":
                hari="Selasa";
                break;
            case "Wednesday":
                hari="Rabu";
                break;
            case "Thursday":
                hari="Kamis";
                break;
            case "Friday":
                hari="Jumat";
                break;
            case "Saturday":
                hari="Sabtu";
                break;
            case "Sunday":
                hari="Minggu";
                break;
        }
        return hari;
    }
    
    private void tampil() {        
        Object[] row={"No","ID","Nama",
            "1("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),1)+")",
            "2("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),2)+")",
            "3("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),3)+")",
            "4("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),4)+")",
            "5("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),5)+")",
            "6("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),6)+")",
            "7("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),7)+")",
            "8("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),8)+")",
            "9("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),9)+")",
            "10("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),10)+")",
            "11("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),11)+")",
            "12("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),12)+")",
            "13("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),13)+")",
            "14("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),14)+")",
            "15("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),15)+")",
            "16("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),16)+")",
            "17("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),17)+")",
            "18("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),18)+")",
            "19("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),19)+")",
            "20("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),20)+")",
            "21("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),21)+")",
            "22("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),22)+")",
            "23("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),23)+")",
            "24("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),24)+")",
            "25("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),25)+")",
            "26("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),26)+")",
            "27("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),27)+")",
            "28("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),28)+")",
            "29("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),29)+")",
            "30("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),30)+")",
            "31("+konversi(Integer.parseInt(tahun),Integer.parseInt(bulan),31)+")"
        };
        tabMode=new DefaultTableModel(null,row){
             @Override public boolean isCellEditable(int rowIndex, int colIndex){
                boolean a = false;
                if (colIndex==0) {
                    a=true;
                }
                return a;
             }
             Class[] types = new Class[] {
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                 java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, 
                 java.lang.Object.class
             };
             @Override
             public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
             }
        };
        tbJadwal.setModel(tabMode);
        
        for (int i = 0; i < 34; i++) {
            TableColumn column = tbJadwal.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(35);
            }else if(i==1){
                column.setPreferredWidth(50);
            }else if(i==2){
                column.setPreferredWidth(250);
            }else{
                column.setPreferredWidth(75);
            }
        }
        tbJadwal.setDefaultRenderer(Object.class, new WarnaTable());
        LCount.setText(""+tabMode.getRowCount());
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private widget.Button BtnFile;
  private widget.Button BtnKeluar;
  private widget.Button BtnSimpan;
  private widget.Label LCount;
  private widget.ScrollPane Scroll;
  private widget.InternalFrame internalFrame1;
  private widget.Label jLabel7;
  private javax.swing.JPanel jPanel1;
  private widget.panelisi panelGlass5;
  private widget.Table tbJadwal;
  // End of variables declaration//GEN-END:variables
}
