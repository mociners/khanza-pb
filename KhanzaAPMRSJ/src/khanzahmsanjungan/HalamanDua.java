/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmUtama.java
 *
 * Created on 04 Des 13, 11:19:32
 */
package khanzahmsanjungan;

import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class HalamanDua extends javax.swing.JFrame {
    private final sekuel Sequel=new sekuel();
    private final validasi Valid=new validasi();
    private String validasiregistrasi=Sequel.cariIsi("select set_validasi_registrasi.wajib_closing_kasir from set_validasi_registrasi");
        
    /** Creates new form frmUtama */
    public HalamanDua(java.awt.Frame parent, boolean id) {
        //super(parent, id);
        initComponents();
        setIconImage(new ImageIcon(super.getClass().getResource("/picture/addressbook-edit24.png")).getImage());      
        this.setSize(screen.width,screen.height);
    }    
    private final Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();  

    private HalamanDua() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }


     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new component.Panel();
        jLabel3 = new component.Label();
        panel1 = new usu.widget.glass.PanelGlass();
        jLabel6 = new component.Label();
        TCari = new component.TextBox();
        btnCari = new widget.ButtonBig();
        btnClose = new widget.ButtonBig();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("::[ SIMRS KhanzaHMS, Sub Menu Anjungan Registrasi Mandiri Pasien ]::");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(130, 50, 130));
        jPanel3.setBorder(null);
        jPanel3.setPreferredSize(new java.awt.Dimension(560, 30));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Dikembangkan Oleh Khanza.Soft Media, Email : khanza_media@yahoo.com, Skype : khanza.media, HP : 08562675039");
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jLabel3.setOpaque(true);
        jPanel3.add(jLabel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        panel1.setBackground(new java.awt.Color(102, 102, 102));
        panel1.setBackgroundImage(new javax.swing.ImageIcon(getClass().getResource("/picture/wallpaper.jpg"))); // NOI18N
        panel1.setBackgroundImageType(usu.widget.constan.BackgroundConstan.BACKGROUND_IMAGE_LEFT_BOTTOM);
        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 1, true), ":::[ Silahkan Isikan Salah Nomor Identitas Anda ]:::", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Noto Sans", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        panel1.setOpaque(true);
        panel1.setOpaqueImage(false);
        panel1.setPreferredSize(new java.awt.Dimension(200, 200));
        panel1.setRound(false);
        panel1.setLayout(new java.awt.GridBagLayout());

        jLabel6.setForeground(new java.awt.Color(255, 204, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("No.RM/KTP/Asuransi/JKN Pasien :");
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel6.setIconTextGap(10);
        jLabel6.setPreferredSize(new java.awt.Dimension(400, 45));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 141;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(175, 230, 0, 0);
        panel1.add(jLabel6, gridBagConstraints);

        TCari.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 2, true));
        TCari.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TCari.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(350, 45));
        TCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCariActionPerformed(evt);
            }
        });
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 515;
        gridBagConstraints.ipady = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 230, 0, 0);
        panel1.add(TCari, gridBagConstraints);

        btnCari.setBackground(new java.awt.Color(102, 102, 102));
        btnCari.setForeground(new java.awt.Color(255, 255, 255));
        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/Cheklist48X48 (1).png"))); // NOI18N
        btnCari.setText("Lanjut");
        btnCari.setDefaultCapable(false);
        btnCari.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnCari.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCari.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnCari.setIconTextGap(10);
        btnCari.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnCari.setOpaque(true);
        btnCari.setPreferredSize(new java.awt.Dimension(200, 90));
        btnCari.setVerifyInputWhenFocusTarget(false);
        btnCari.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnCari.setVerticalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 230, 0);
        panel1.add(btnCari, gridBagConstraints);

        btnClose.setBackground(new java.awt.Color(102, 102, 102));
        btnClose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.black, java.awt.Color.black));
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/48x48/Exit48x48.png"))); // NOI18N
        btnClose.setText("Kembali");
        btnClose.setDefaultCapable(false);
        btnClose.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnClose.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnClose.setIconTextGap(10);
        btnClose.setOpaque(true);
        btnClose.setPreferredSize(new java.awt.Dimension(200, 90));
        btnClose.setVerifyInputWhenFocusTarget(false);
        btnClose.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnClose.setVerticalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        btnClose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCloseKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 230, 121);
        panel1.add(btnClose, gridBagConstraints);

        getContentPane().add(panel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TCariActionPerformed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(TCari.getText().trim().equals("")){
                JOptionPane.showMessageDialog(rootPane,"<html><div align='center'><font size='5' face='Tahoma' color='#825082'>Silahkan masukkan No.RM/KTP/Asuransi/JKN !!!</font></div></html>");
            }else{
                if(Sequel.cariInteger("select count(no_rkm_medis) from pasien where no_rkm_medis=?",TCari.getText().trim())>0){
                     if(validasiregistrasi.equals("Yes")){
                         if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",TCari.getText())>0){
                             JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                         }else{
                             DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                             pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                             pilih.setLocationRelativeTo(this);
                             pilih.setPasien(TCari.getText());
                             pilih.tampil();
                             pilih.setVisible(true);
                         }
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(TCari.getText());
                         pilih.tampil();
                         pilih.setVisible(true);
                     }  
                }else if(Sequel.cariInteger("select count(no_ktp) from pasien where no_ktp=?",TCari.getText().trim())>0){
                     if(validasiregistrasi.equals("Yes")){
                         if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()))>0){
                             JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                         }else{
                             DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                             pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                             pilih.setLocationRelativeTo(this);
                             pilih.setPasien(Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()));
                             pilih.tampil();
                             pilih.setVisible(true);
                         }
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()));
                         pilih.tampil();
                         pilih.setVisible(true);
                     }
                }else if(Sequel.cariInteger("select count(no_peserta) from pasien where no_peserta=?",TCari.getText().trim())>0){
                     if(validasiregistrasi.equals("Yes")){
                         if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()))>0){
                             JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                         }else{
                             DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                             pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                             pilih.setLocationRelativeTo(this);
                             pilih.setPasien(Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()));
                             pilih.tampil();
                             pilih.setVisible(true);
                         }
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth()-20,this.getHeight()-70);
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()));
                         pilih.tampil();
                         pilih.setVisible(true); 
                     }
                }else{
                    JOptionPane.showMessageDialog(rootPane,
                        "<html><div align='center'><font size='5' face='Tahoma' color='#825082'>Maaf, data pasien dengan No.RM/KTP/Asuransi/JKN tersebut tidak ditemukan." +
                        "<br>Bagi pasien yang baru pertama kali periksa, silahkan ke petugas pendaftaran </font></div></html>");
                    TCari.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        TCari.setText("");
    }//GEN-LAST:event_formWindowActivated

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        if(TCari.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"<html><div align='center'><font size='5' face='Tahoma' color='#825082'>Silahkan masukkan No.RM/KTP/Asuransi/JKN !!!</font></div></html>");
        }else{
            if(Sequel.cariInteger("select count(no_rkm_medis) from pasien where no_rkm_medis=?",TCari.getText().trim())>0){
                 if(validasiregistrasi.equals("Yes")){
                     if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",TCari.getText())>0){
                         JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth(),this.getHeight());
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(TCari.getText());
                         pilih.tampil();
                         pilih.setVisible(true);
                     }
                 }else{
                     DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                     pilih.setSize(this.getWidth(),this.getHeight());
                     pilih.setLocationRelativeTo(this);
                     pilih.setPasien(TCari.getText());
                     pilih.tampil();
                     pilih.setVisible(true);
                 }  
            }else if(Sequel.cariInteger("select count(no_ktp) from pasien where no_ktp=?",TCari.getText().trim())>0){
                 if(validasiregistrasi.equals("Yes")){
                     if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()))>0){
                         JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth(),this.getHeight());
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()));
                         pilih.tampil();
                         pilih.setVisible(true);
                     }
                 }else{
                     DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                     pilih.setSize(this.getWidth(),this.getHeight());
                     pilih.setLocationRelativeTo(this);
                     pilih.setPasien(Sequel.cariIsi("select no_rkm_medis from pasien where no_ktp=?",TCari.getText().trim()));
                     pilih.tampil();
                     pilih.setVisible(true);
                 }
            }else if(Sequel.cariInteger("select count(no_peserta) from pasien where no_peserta=?",TCari.getText().trim())>0){
                 if(validasiregistrasi.equals("Yes")){
                     if(Sequel.cariInteger("select count(no_rkm_medis) from reg_periksa where no_rkm_medis=? and status_bayar='Belum Bayar' and stts<>'Batal'",Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()))>0){
                         JOptionPane.showMessageDialog(rootPane,"Maaf, pasien pada kunjungan sebelumnya memiliki tagihan yang belum di closing.\nSilahkan konfirmasi dengan pihak kasir.. !!");
                     }else{
                         DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                         pilih.setSize(this.getWidth(),this.getHeight());
                         pilih.setLocationRelativeTo(this);
                         pilih.setPasien(Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()));
                         pilih.tampil();
                         pilih.setVisible(true);
                     }
                 }else{
                     DlgPilihPoli pilih=new DlgPilihPoli(this,true);
                     pilih.setSize(this.getWidth(),this.getHeight());
                     pilih.setLocationRelativeTo(this);
                     pilih.setPasien(Sequel.cariIsi("select pasien.no_rkm_medis from pasien where pasien.no_peserta=?",TCari.getText().trim()));
                     pilih.tampil();
                     pilih.setVisible(true); 
                 }
            }else{
                JOptionPane.showMessageDialog(rootPane,
                    "<html><div align='center'><font size='5' face='Tahoma' color='#825082'>Maaf, data pasien dengan No.RM/KTP/Asuransi/JKN tersebut tidak ditemukan." +
                    "<br>Bagi pasien yang baru pertama kali periksa, silahkan ke petugas pendaftaran </font></div></html>");
                TCari.requestFocus();
            }
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btnCariActionPerformed(null);
        }
    }//GEN-LAST:event_btnCariKeyPressed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose ();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCloseKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new HalamanDua().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.TextBox TCari;
    private widget.ButtonBig btnCari;
    private widget.ButtonBig btnClose;
    private component.Label jLabel3;
    private component.Label jLabel6;
    private component.Panel jPanel3;
    private usu.widget.glass.PanelGlass panel1;
    // End of variables declaration//GEN-END:variables
}
